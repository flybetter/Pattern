意图
    将抽象部分与实现部分分离，使它们都可以独立的变化

主要解决
    在有多种可能会变化的情况下，用继承会造成类爆炸问题，扩展起来不灵活

何时使用
    实现系统可能有多个角度分类，每一种角度都可能变化

如何解决
    把这种多角度分类分离出来，让它们独立变化，减少它们之间耦合

关键代码
    抽象类依赖实现类

应用实例
    1猪八戒从天蓬元帅转世投胎到猪，转世投胎的机制将尘世划分为两个等级，即灵魂和肉体，前者相当于抽象化，后者相对与实现化。生灵通过功能的委派，
  调用肉体对象的功能，使得生灵可以动态地选择。
    2墙上的开关，可以看到的开关是抽象的，不用管里面具体怎么实现的

优点
    1抽象和实现的分离
    2优秀的扩展能力
    3实现细节对客户透明

缺点
    桥接模式的引入会增加系统的理解与涉及难度，由于聚合关联建立在抽象层，要求开发者针对抽象进行设计与编程
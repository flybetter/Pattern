是否lazy初始化：是
是否多线程安全：是
实现难度：一般
描述：
    这种方式能达到双检索方式一样的功效，但实现更简单，对静态域使用延迟初始化，应使用这种方式二不是双检索方式。这种方式只适用于静态域的情况下，
  双检锁模式可在实例域需要延迟初始化时使用。
    这种方式同样利用了classloader机制来保证初始化instance时只有一个线程，它跟第三种方式不同的是，第3种方式只要Singleton类被装载了，那么
  instance就被实例化（没有达到lazy loading效果），而这种方式Singleton类被装载了，instance不一定被初始化。因为SingletonHoler类没有
  被主动使用，只有显示通过调用getInstance方法时，才会显示装载SingletonHoder类，从而实例化instance。想象一下，如果实例化instance很?
  消耗资源，所以想让它延迟加载，另外一方面，又不希望在Singleton类加载时就实例化，因为不能确保Singleton类还可能在其他的地方被主动shying从而
  被加载，那么这个时候实例化instance显然是不合适的。这个时候，这种方式相比第3种方式就显得很合理。